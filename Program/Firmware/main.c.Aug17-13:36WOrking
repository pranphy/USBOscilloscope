


#include <avr/io.h>
#include <avr/wdt.h>
#include <avr/interrupt.h>  
#include <util/delay.h>     

#include <avr/pgmspace.h>   
#include "usbdrv.h"
#include "oddebug.h"        


#define USB_DATA_OUT		2
static uchar replyBuf[16]="Hello,Prakash";


 
PROGMEM const char usbHidReportDescriptor[22] = {   
    0x06, 0x00, 0xff,              
    0x09, 0x01,                    
    0xa1, 0x01,
    0x15, 0x00,
    0x26, 0xff, 0x00,
    0x75, 0x08,
    0x95, 0x80,
    0x09, 0x00,
    0xb2, 0x02, 0x01,
    0xc0
};


USB_PUBLIC uchar usbFunctionSetup(uchar*); 

int main()
{
	uchar i;
	DDRB |=(1<<DDB1); // PB1 as output
	wdt_enable(WDTO_1S); // enable 1s watchdog timer
	usbInit();
	usbDeviceDisconnect(); // enforce re-enumeration
	for(i = 0; i<250; i++) 
	{ 
		wdt_reset(); 
		_delay_ms(2);
	}
	usbDeviceConnect();

	sei();

	while(1)
	{
		wdt_reset(); 
		usbPoll();
	}
	return 0;
}




USB_PUBLIC uchar usbFunctionSetup(uchar data[8]) 
{
    usbRequest_t *rq = (void *)data;
        
    switch(rq->bRequest)
    { 
		case USB_LED_ON:
			PORTB |=(1<<PORTB1); 
			return 0;
		case USB_LED_OFF: 
			PORTB &= ~(1<<PORTB1);
			return 0;
		case USB_DATA_OUT:
			usbMsgPtr=replyBuf;
			return sizeof(replyBuf);
    }

    return 0;
}